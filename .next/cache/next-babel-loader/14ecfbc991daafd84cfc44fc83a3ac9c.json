{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar url_1 = require(\"url\");\nvar mitt_1 = __importDefault(require(\"../mitt\"));\nvar utils_1 = require(\"../utils\");\nvar is_dynamic_1 = require(\"./utils/is-dynamic\");\nvar route_matcher_1 = require(\"./utils/route-matcher\");\nvar route_regex_1 = require(\"./utils/route-regex\");\nvar basePath = process.env.__NEXT_ROUTER_BASEPATH || '';\nfunction addBasePath(path) {\n  return path.indexOf(basePath) !== 0 ? basePath + path : path;\n}\nexports.addBasePath = addBasePath;\nfunction delBasePath(path) {\n  return path.indexOf(basePath) === 0 ? path.substr(basePath.length) || '/' : path;\n}\nfunction toRoute(path) {\n  return path.replace(/\\/$/, '') || '/';\n}\nvar prepareRoute = function prepareRoute(path) {\n  return toRoute(!path || path === '/' ? '/index' : path);\n};\nfunction fetchNextData(pathname, query, isServerRender, cb) {\n  var attempts = isServerRender ? 3 : 1;\n  function getResponse() {\n    return fetch(utils_1.formatWithValidation({\n      // @ts-ignore __NEXT_DATA__\n      pathname: \"/_next/data/\".concat(__NEXT_DATA__.buildId).concat(pathname, \".json\"),\n      query: query\n    }), {\n      // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n      // Cookies may also be required for `getServerSideProps`.\n      //\n      // > `fetch` won’t send cookies, unless you set the credentials init\n      // > option.\n      // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n      //\n      // > For maximum browser compatibility when it comes to sending &\n      // > receiving cookies, always supply the `credentials: 'same-origin'`\n      // > option instead of relying on the default.\n      // https://github.com/github/fetch#caveats\n      credentials: 'same-origin'\n    }).then(function (res) {\n      if (!res.ok) {\n        if (--attempts > 0 && res.status >= 500) {\n          return getResponse();\n        }\n        throw new Error(\"Failed to load static props\");\n      }\n      return res.json();\n    });\n  }\n  return getResponse().then(function (data) {\n    return cb ? cb(data) : data;\n  })[\"catch\"](function (err) {\n    // We should only trigger a server-side transition if this was caused\n    // on a client-side transition. Otherwise, we'd get into an infinite\n    // loop.\n    if (!isServerRender) {\n      ;\n      err.code = 'PAGE_LOAD_ERROR';\n    }\n    throw err;\n  });\n}\nvar Router = /*#__PURE__*/function () {\n  function Router(pathname, query, as, _ref) {\n    var _this = this;\n    var initialProps = _ref.initialProps,\n      pageLoader = _ref.pageLoader,\n      App = _ref.App,\n      wrapApp = _ref.wrapApp,\n      Component = _ref.Component,\n      err = _ref.err,\n      subscription = _ref.subscription,\n      isFallback = _ref.isFallback;\n    _classCallCheck(this, Router);\n    // Static Data Cache\n    this.sdc = {};\n    this.onPopState = function (e) {\n      if (!e.state) {\n        // We get state as undefined for two reasons.\n        //  1. With older safari (< 8) and older chrome (< 34)\n        //  2. When the URL changed with #\n        //\n        // In the both cases, we don't need to proceed and change the route.\n        // (as it's already changed)\n        // But we can simply replace the state with the new changes.\n        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n        // So, doing the following for (1) does no harm.\n        var _pathname = _this.pathname,\n          _query = _this.query;\n        _this.changeState('replaceState', utils_1.formatWithValidation({\n          pathname: _pathname,\n          query: _query\n        }), utils_1.getURL());\n        return;\n      }\n      // Make sure we don't re-render on initial load,\n      // can be caused by navigating back from an external site\n      if (e.state && _this.isSsr && e.state.as === _this.asPath && url_1.parse(e.state.url).pathname === _this.pathname) {\n        return;\n      }\n      // If the downstream application returns falsy, return.\n      // They will then be responsible for handling the event.\n      if (_this._bps && !_this._bps(e.state)) {\n        return;\n      }\n      var _e$state = e.state,\n        url = _e$state.url,\n        as = _e$state.as,\n        options = _e$state.options;\n      if (true) {\n        if (typeof url === 'undefined' || typeof as === 'undefined') {\n          console.warn('`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/zeit/next.js/popstate-state-empty');\n        }\n      }\n      _this.replace(url, as, options);\n    };\n    this._getStaticData = function (asPath) {\n      var pathname = prepareRoute(url_1.parse(asPath).pathname);\n      return false && _this.sdc[pathname] ? Promise.resolve(_this.sdc[pathname]) : fetchNextData(pathname, null, _this.isSsr, function (data) {\n        return _this.sdc[pathname] = data;\n      });\n    };\n    this._getServerData = function (asPath) {\n      var _url_1$parse = url_1.parse(asPath, true),\n        pathname = _url_1$parse.pathname,\n        query = _url_1$parse.query;\n      pathname = prepareRoute(pathname);\n      return fetchNextData(pathname, query, _this.isSsr);\n    };\n    // represents the current component key\n    this.route = toRoute(pathname);\n    // set up the component cache (by route keys)\n    this.components = {};\n    // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n    if (pathname !== '/_error') {\n      this.components[this.route] = {\n        Component: Component,\n        props: initialProps,\n        err: err,\n        __N_SSG: initialProps && initialProps.__N_SSG,\n        __N_SSP: initialProps && initialProps.__N_SSP\n      };\n    }\n    this.components['/_app'] = {\n      Component: App\n    };\n    // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n    this.events = Router.events;\n    this.pageLoader = pageLoader;\n    this.pathname = pathname;\n    this.query = query;\n    // if auto prerendered and dynamic route wait to update asPath\n    // until after mount to prevent hydration mismatch\n    this.asPath =\n    // @ts-ignore this is temporarily global (attached to window)\n    is_dynamic_1.isDynamicRoute(pathname) && __NEXT_DATA__.autoExport ? pathname : as;\n    this.basePath = basePath;\n    this.sub = subscription;\n    this.clc = null;\n    this._wrapApp = wrapApp;\n    // make sure to ignore extra popState in safari on navigating\n    // back from external site\n    this.isSsr = true;\n    this.isFallback = isFallback;\n    if (true) {\n      // in order for `e.state` to work on the `onpopstate` event\n      // we have to register the initial route upon initialization\n      this.changeState('replaceState', utils_1.formatWithValidation({\n        pathname: pathname,\n        query: query\n      }), as);\n      window.addEventListener('popstate', this.onPopState);\n    }\n  }\n  // @deprecated backwards compatibility even though it's a private method.\n  _createClass(Router, [{\n    key: \"update\",\n    value: function update(route, mod) {\n      var Component = mod[\"default\"] || mod;\n      var data = this.components[route];\n      if (!data) {\n        throw new Error(\"Cannot update unavailable route: \".concat(route));\n      }\n      var newData = Object.assign(Object.assign({}, data), {\n        Component: Component,\n        __N_SSG: mod.__N_SSG,\n        __N_SSP: mod.__N_SSP\n      });\n      this.components[route] = newData;\n      // pages/_app.js updated\n      if (route === '/_app') {\n        this.notify(this.components[this.route]);\n        return;\n      }\n      if (route === this.route) {\n        this.notify(newData);\n      }\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      window.location.reload();\n    }\n    /**\n     * Go back in history\n     */\n  }, {\n    key: \"back\",\n    value: function back() {\n      window.history.back();\n    }\n    /**\n     * Performs a `pushState` with arguments\n     * @param url of the route\n     * @param as masks `url` for the browser\n     * @param options object you can define `shallow` and other options\n     */\n  }, {\n    key: \"push\",\n    value: function push(url) {\n      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.change('pushState', url, as, options);\n    }\n    /**\n     * Performs a `replaceState` with arguments\n     * @param url of the route\n     * @param as masks `url` for the browser\n     * @param options object you can define `shallow` and other options\n     */\n  }, {\n    key: \"replace\",\n    value: function replace(url) {\n      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.change('replaceState', url, as, options);\n    }\n  }, {\n    key: \"change\",\n    value: function change(method, _url, _as, options) {\n      var _this2 = this;\n      return new Promise(function (resolve, reject) {\n        if (!options._h) {\n          _this2.isSsr = false;\n        }\n        // marking route changes as a navigation start entry\n        if (utils_1.ST) {\n          performance.mark('routeChange');\n        }\n        // If url and as provided as an object representation,\n        // we'll format them into the string version here.\n        var url = typeof _url === 'object' ? utils_1.formatWithValidation(_url) : _url;\n        var as = typeof _as === 'object' ? utils_1.formatWithValidation(_as) : _as;\n        url = addBasePath(url);\n        as = addBasePath(as);\n        // Add the ending slash to the paths. So, we can serve the\n        // \"<page>/index.html\" directly for the SSR page.\n        if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n          var rewriteUrlForNextExport = require('./rewrite-url-for-export').rewriteUrlForNextExport;\n          // @ts-ignore this is temporarily global (attached to window)\n          if (__NEXT_DATA__.nextExport) {\n            as = rewriteUrlForNextExport(as);\n          }\n        }\n        _this2.abortComponentLoad(as);\n        // If the url change is only related to a hash change\n        // We should not proceed. We should only change the state.\n        // WARNING: `_h` is an internal option for handing Next.js client-side\n        // hydration. Your app should _never_ use this property. It may change at\n        // any time without notice.\n        if (!options._h && _this2.onlyAHashChange(as)) {\n          _this2.asPath = as;\n          Router.events.emit('hashChangeStart', as);\n          _this2.changeState(method, url, as, options);\n          _this2.scrollToHash(as);\n          Router.events.emit('hashChangeComplete', as);\n          return resolve(true);\n        }\n        var _url_1$parse2 = url_1.parse(url, true),\n          pathname = _url_1$parse2.pathname,\n          query = _url_1$parse2.query,\n          protocol = _url_1$parse2.protocol;\n        if (!pathname || protocol) {\n          if (true) {\n            throw new Error(\"Invalid href passed to router: \".concat(url, \" https://err.sh/zeit/next.js/invalid-href-passed\"));\n          }\n          return resolve(false);\n        }\n        // If asked to change the current URL we should reload the current page\n        // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n        // We also need to set the method = replaceState always\n        // as this should not go into the history (That's how browsers work)\n        // We should compare the new asPath to the current asPath, not the url\n        if (!_this2.urlIsNew(as)) {\n          method = 'replaceState';\n        }\n        var route = toRoute(pathname);\n        var _options$shallow = options.shallow,\n          shallow = _options$shallow === void 0 ? false : _options$shallow;\n        if (is_dynamic_1.isDynamicRoute(route)) {\n          var _url_1$parse3 = url_1.parse(as),\n            asPathname = _url_1$parse3.pathname;\n          var routeRegex = route_regex_1.getRouteRegex(route);\n          var routeMatch = route_matcher_1.getRouteMatcher(routeRegex)(asPathname);\n          if (!routeMatch) {\n            var missingParams = Object.keys(routeRegex.groups).filter(function (param) {\n              return !query[param];\n            });\n            if (missingParams.length > 0) {\n              if (true) {\n                console.warn(\"Mismatching `as` and `href` failed to manually provide \" + \"the params: \".concat(missingParams.join(', '), \" in the `href`'s `query`\"));\n              }\n              return reject(new Error(\"The provided `as` value (\".concat(asPathname, \") is incompatible with the `href` value (\").concat(route, \"). \") + \"Read more: https://err.sh/zeit/next.js/incompatible-href-as\"));\n            }\n          } else {\n            // Merge params into `query`, overwriting any specified in search\n            Object.assign(query, routeMatch);\n          }\n        }\n        Router.events.emit('routeChangeStart', as);\n        // If shallow is true and the route exists in the router cache we reuse the previous result\n        _this2.getRouteInfo(route, pathname, query, as, shallow).then(function (routeInfo) {\n          var error = routeInfo.error;\n          if (error && error.cancelled) {\n            return resolve(false);\n          }\n          Router.events.emit('beforeHistoryChange', as);\n          _this2.changeState(method, url, as, options);\n          if (true) {\n            var appComp = _this2.components['/_app'].Component;\n            window.next.isPrerendered = appComp.getInitialProps === appComp.origGetInitialProps && !routeInfo.Component.getInitialProps;\n          }\n          _this2.set(route, pathname, query, as, routeInfo);\n          if (error) {\n            Router.events.emit('routeChangeError', error, as);\n            throw error;\n          }\n          Router.events.emit('routeChangeComplete', as);\n          return resolve(true);\n        }, reject);\n      });\n    }\n  }, {\n    key: \"changeState\",\n    value: function changeState(method, url, as) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      if (true) {\n        if (typeof window.history === 'undefined') {\n          console.error(\"Warning: window.history is not available.\");\n          return;\n        }\n        if (typeof window.history[method] === 'undefined') {\n          console.error(\"Warning: window.history.\".concat(method, \" is not available\"));\n          return;\n        }\n      }\n      if (method !== 'pushState' || utils_1.getURL() !== as) {\n        window.history[method]({\n          url: url,\n          as: as,\n          options: options\n        },\n        // Most browsers currently ignores this parameter, although they may use it in the future.\n        // Passing the empty string here should be safe against future changes to the method.\n        // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n        '', as);\n      }\n    }\n  }, {\n    key: \"getRouteInfo\",\n    value: function getRouteInfo(route, pathname, query, as) {\n      var _this3 = this;\n      var shallow = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var cachedRouteInfo = this.components[route];\n      // If there is a shallow route transition possible\n      // If the route is already rendered on the screen.\n      if (shallow && cachedRouteInfo && this.route === route) {\n        return Promise.resolve(cachedRouteInfo);\n      }\n      var handleError = function handleError(err, loadErrorFail) {\n        return new Promise(function (resolve) {\n          if (err.code === 'PAGE_LOAD_ERROR' || loadErrorFail) {\n            // If we can't load the page it could be one of following reasons\n            //  1. Page doesn't exists\n            //  2. Page does exist in a different zone\n            //  3. Internal error while loading the page\n            // So, doing a hard reload is the proper way to deal with this.\n            window.location.href = as;\n            // Changing the URL doesn't block executing the current code path.\n            // So, we need to mark it as a cancelled error and stop the routing logic.\n            err.cancelled = true;\n            // @ts-ignore TODO: fix the control flow here\n            return resolve({\n              error: err\n            });\n          }\n          if (err.cancelled) {\n            // @ts-ignore TODO: fix the control flow here\n            return resolve({\n              error: err\n            });\n          }\n          resolve(_this3.fetchComponent('/_error').then(function (res) {\n            var Component = res.page;\n            var routeInfo = {\n              Component: Component,\n              err: err\n            };\n            return new Promise(function (resolve) {\n              _this3.getInitialProps(Component, {\n                err: err,\n                pathname: pathname,\n                query: query\n              }).then(function (props) {\n                routeInfo.props = props;\n                routeInfo.error = err;\n                resolve(routeInfo);\n              }, function (gipErr) {\n                console.error('Error in error page `getInitialProps`: ', gipErr);\n                routeInfo.error = err;\n                routeInfo.props = {};\n                resolve(routeInfo);\n              });\n            });\n          })[\"catch\"](function (err) {\n            return handleError(err, true);\n          }));\n        });\n      };\n      return new Promise(function (resolve, reject) {\n        if (cachedRouteInfo) {\n          return resolve(cachedRouteInfo);\n        }\n        _this3.fetchComponent(route).then(function (res) {\n          return resolve({\n            Component: res.page,\n            __N_SSG: res.mod.__N_SSG,\n            __N_SSP: res.mod.__N_SSP\n          });\n        }, reject);\n      }).then(function (routeInfo) {\n        var Component = routeInfo.Component,\n          __N_SSG = routeInfo.__N_SSG,\n          __N_SSP = routeInfo.__N_SSP;\n        if (true) {\n          var _require = require('react-is'),\n            isValidElementType = _require.isValidElementType;\n          if (!isValidElementType(Component)) {\n            throw new Error(\"The default export is not a React Component in page: \\\"\".concat(pathname, \"\\\"\"));\n          }\n        }\n        return _this3._getData(function () {\n          return __N_SSG ? _this3._getStaticData(as) : __N_SSP ? _this3._getServerData(as) : _this3.getInitialProps(Component,\n          // we provide AppTree later so this needs to be `any`\n          {\n            pathname: pathname,\n            query: query,\n            asPath: as\n          });\n        }).then(function (props) {\n          routeInfo.props = props;\n          _this3.components[route] = routeInfo;\n          return routeInfo;\n        });\n      })[\"catch\"](handleError);\n    }\n  }, {\n    key: \"set\",\n    value: function set(route, pathname, query, as, data) {\n      this.isFallback = false;\n      this.route = route;\n      this.pathname = pathname;\n      this.query = query;\n      this.asPath = as;\n      this.notify(data);\n    }\n    /**\n     * Callback to execute before replacing router state\n     * @param cb callback to be executed\n     */\n  }, {\n    key: \"beforePopState\",\n    value: function beforePopState(cb) {\n      this._bps = cb;\n    }\n  }, {\n    key: \"onlyAHashChange\",\n    value: function onlyAHashChange(as) {\n      if (!this.asPath) return false;\n      var _this$asPath$split = this.asPath.split('#'),\n        _this$asPath$split2 = _slicedToArray(_this$asPath$split, 2),\n        oldUrlNoHash = _this$asPath$split2[0],\n        oldHash = _this$asPath$split2[1];\n      var _as$split = as.split('#'),\n        _as$split2 = _slicedToArray(_as$split, 2),\n        newUrlNoHash = _as$split2[0],\n        newHash = _as$split2[1];\n      // Makes sure we scroll to the provided hash if the url/hash are the same\n      if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n        return true;\n      }\n      // If the urls are change, there's more than a hash change\n      if (oldUrlNoHash !== newUrlNoHash) {\n        return false;\n      }\n      // If the hash has changed, then it's a hash only change.\n      // This check is necessary to handle both the enter and\n      // leave hash === '' cases. The identity case falls through\n      // and is treated as a next reload.\n      return oldHash !== newHash;\n    }\n  }, {\n    key: \"scrollToHash\",\n    value: function scrollToHash(as) {\n      var _as$split3 = as.split('#'),\n        _as$split4 = _slicedToArray(_as$split3, 2),\n        hash = _as$split4[1];\n      // Scroll to top if the hash is just `#` with no value\n      if (hash === '') {\n        window.scrollTo(0, 0);\n        return;\n      }\n      // First we check if the element by id is found\n      var idEl = document.getElementById(hash);\n      if (idEl) {\n        idEl.scrollIntoView();\n        return;\n      }\n      // If there's no element with the id, we check the `name` property\n      // To mirror browsers\n      var nameEl = document.getElementsByName(hash)[0];\n      if (nameEl) {\n        nameEl.scrollIntoView();\n      }\n    }\n  }, {\n    key: \"urlIsNew\",\n    value: function urlIsNew(asPath) {\n      return this.asPath !== asPath;\n    }\n    /**\n     * Prefetch page code, you may wait for the data during page rendering.\n     * This feature only works in production!\n     * @param url the href of prefetched page\n     * @param asPath the as path of the prefetched page\n     */\n  }, {\n    key: \"prefetch\",\n    value: function prefetch(url) {\n      var _this4 = this;\n      var asPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return new Promise(function (resolve, reject) {\n        var _url_1$parse4 = url_1.parse(url),\n          pathname = _url_1$parse4.pathname,\n          protocol = _url_1$parse4.protocol;\n        if (!pathname || protocol) {\n          if (true) {\n            throw new Error(\"Invalid href passed to router: \".concat(url, \" https://err.sh/zeit/next.js/invalid-href-passed\"));\n          }\n          return;\n        }\n        // Prefetch is not supported in development mode because it would trigger on-demand-entries\n        if (true) {\n          return;\n        }\n        var route = delBasePath(toRoute(pathname));\n        Promise.all([_this4.pageLoader.prefetchData(url, delBasePath(asPath)), _this4.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route)]).then(function () {\n          return resolve();\n        }, reject);\n      });\n    }\n  }, {\n    key: \"fetchComponent\",\n    value: function fetchComponent(route) {\n      var cancelled, cancel, componentResult, error;\n      return _regeneratorRuntime().async(function fetchComponent$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            cancelled = false;\n            cancel = this.clc = function () {\n              cancelled = true;\n            };\n            route = delBasePath(route);\n            _context.next = 5;\n            return _regeneratorRuntime().awrap(this.pageLoader.loadPage(route));\n          case 5:\n            componentResult = _context.sent;\n            if (!cancelled) {\n              _context.next = 10;\n              break;\n            }\n            error = new Error(\"Abort fetching component for route: \\\"\".concat(route, \"\\\"\"));\n            error.cancelled = true;\n            throw error;\n          case 10:\n            if (cancel === this.clc) {\n              this.clc = null;\n            }\n            return _context.abrupt(\"return\", componentResult);\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"_getData\",\n    value: function _getData(fn) {\n      var _this5 = this;\n      var cancelled = false;\n      var cancel = function cancel() {\n        cancelled = true;\n      };\n      this.clc = cancel;\n      return fn().then(function (data) {\n        if (cancel === _this5.clc) {\n          _this5.clc = null;\n        }\n        if (cancelled) {\n          var err = new Error('Loading initial props cancelled');\n          err.cancelled = true;\n          throw err;\n        }\n        return data;\n      });\n    }\n  }, {\n    key: \"getInitialProps\",\n    value: function getInitialProps(Component, ctx) {\n      var App = this.components['/_app'].Component;\n      var AppTree = this._wrapApp(App);\n      ctx.AppTree = AppTree;\n      return utils_1.loadGetInitialProps(App, {\n        AppTree: AppTree,\n        Component: Component,\n        router: this,\n        ctx: ctx\n      });\n    }\n  }, {\n    key: \"abortComponentLoad\",\n    value: function abortComponentLoad(as) {\n      if (this.clc) {\n        var e = new Error('Route Cancelled');\n        e.cancelled = true;\n        Router.events.emit('routeChangeError', e, as);\n        this.clc();\n        this.clc = null;\n      }\n    }\n  }, {\n    key: \"notify\",\n    value: function notify(data) {\n      this.sub(data, this.components['/_app'].Component);\n    }\n  }], [{\n    key: \"_rewriteUrlForNextExport\",\n    value: function _rewriteUrlForNextExport(url) {\n      if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n        var rewriteUrlForNextExport = require('./rewrite-url-for-export').rewriteUrlForNextExport;\n        return rewriteUrlForNextExport(url);\n      } else {\n        return url;\n      }\n    }\n  }]);\n  return Router;\n}();\nexports[\"default\"] = Router;\nRouter.events = mitt_1[\"default\"]();","map":{"version":3,"names":["_slicedToArray","require","_classCallCheck","_createClass","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","_catch","thrown","delegateYield","__importDefault","mod","__esModule","url_1","mitt_1","utils_1","is_dynamic_1","route_matcher_1","route_regex_1","basePath","process","env","__NEXT_ROUTER_BASEPATH","addBasePath","path","indexOf","delBasePath","substr","toRoute","replace","prepareRoute","fetchNextData","pathname","query","isServerRender","cb","attempts","getResponse","fetch","formatWithValidation","concat","__NEXT_DATA__","buildId","credentials","res","ok","status","json","data","code","Router","as","_ref","_this","initialProps","pageLoader","App","wrapApp","Component","subscription","isFallback","sdc","onPopState","e","changeState","getURL","isSsr","asPath","parse","url","_bps","_e$state","options","console","warn","_getStaticData","_getServerData","_url_1$parse","route","components","props","__N_SSG","__N_SSP","events","isDynamicRoute","autoExport","sub","clc","_wrapApp","window","addEventListener","update","newData","assign","notify","reload","location","back","history","arguments","change","_url","_as","_this2","_h","ST","performance","__NEXT_EXPORT_TRAILING_SLASH","rewriteUrlForNextExport","nextExport","abortComponentLoad","onlyAHashChange","emit","scrollToHash","_url_1$parse2","protocol","urlIsNew","_options$shallow","shallow","_url_1$parse3","asPathname","routeRegex","getRouteRegex","routeMatch","getRouteMatcher","missingParams","groups","filter","param","join","getRouteInfo","routeInfo","cancelled","appComp","isPrerendered","getInitialProps","origGetInitialProps","set","_this3","cachedRouteInfo","handleError","loadErrorFail","href","fetchComponent","page","gipErr","_require","isValidElementType","_getData","beforePopState","_this$asPath$split","split","_this$asPath$split2","oldUrlNoHash","oldHash","_as$split","_as$split2","newUrlNoHash","newHash","_as$split3","_as$split4","hash","scrollTo","idEl","document","getElementById","scrollIntoView","nameEl","getElementsByName","prefetch","_this4","_url_1$parse4","all","prefetchData","priority","cancel","componentResult","fetchComponent$","_context","loadPage","_this5","ctx","AppTree","loadGetInitialProps","router","_rewriteUrlForNextExport"],"sources":["F:/Next/google-books/node_modules/next/dist/next-server/lib/router/router.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst url_1 = require(\"url\");\nconst mitt_1 = __importDefault(require(\"../mitt\"));\nconst utils_1 = require(\"../utils\");\nconst is_dynamic_1 = require(\"./utils/is-dynamic\");\nconst route_matcher_1 = require(\"./utils/route-matcher\");\nconst route_regex_1 = require(\"./utils/route-regex\");\nconst basePath = process.env.__NEXT_ROUTER_BASEPATH || '';\nfunction addBasePath(path) {\n    return path.indexOf(basePath) !== 0 ? basePath + path : path;\n}\nexports.addBasePath = addBasePath;\nfunction delBasePath(path) {\n    return path.indexOf(basePath) === 0\n        ? path.substr(basePath.length) || '/'\n        : path;\n}\nfunction toRoute(path) {\n    return path.replace(/\\/$/, '') || '/';\n}\nconst prepareRoute = (path) => toRoute(!path || path === '/' ? '/index' : path);\nfunction fetchNextData(pathname, query, isServerRender, cb) {\n    let attempts = isServerRender ? 3 : 1;\n    function getResponse() {\n        return fetch(utils_1.formatWithValidation({\n            // @ts-ignore __NEXT_DATA__\n            pathname: `/_next/data/${__NEXT_DATA__.buildId}${pathname}.json`,\n            query,\n        }), {\n            // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n            // Cookies may also be required for `getServerSideProps`.\n            //\n            // > `fetch` won’t send cookies, unless you set the credentials init\n            // > option.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n            //\n            // > For maximum browser compatibility when it comes to sending &\n            // > receiving cookies, always supply the `credentials: 'same-origin'`\n            // > option instead of relying on the default.\n            // https://github.com/github/fetch#caveats\n            credentials: 'same-origin',\n        }).then(res => {\n            if (!res.ok) {\n                if (--attempts > 0 && res.status >= 500) {\n                    return getResponse();\n                }\n                throw new Error(`Failed to load static props`);\n            }\n            return res.json();\n        });\n    }\n    return getResponse()\n        .then(data => {\n        return cb ? cb(data) : data;\n    })\n        .catch((err) => {\n        // We should only trigger a server-side transition if this was caused\n        // on a client-side transition. Otherwise, we'd get into an infinite\n        // loop.\n        if (!isServerRender) {\n            ;\n            err.code = 'PAGE_LOAD_ERROR';\n        }\n        throw err;\n    });\n}\nclass Router {\n    constructor(pathname, query, as, { initialProps, pageLoader, App, wrapApp, Component, err, subscription, isFallback, }) {\n        // Static Data Cache\n        this.sdc = {};\n        this.onPopState = (e) => {\n            if (!e.state) {\n                // We get state as undefined for two reasons.\n                //  1. With older safari (< 8) and older chrome (< 34)\n                //  2. When the URL changed with #\n                //\n                // In the both cases, we don't need to proceed and change the route.\n                // (as it's already changed)\n                // But we can simply replace the state with the new changes.\n                // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n                // So, doing the following for (1) does no harm.\n                const { pathname, query } = this;\n                this.changeState('replaceState', utils_1.formatWithValidation({ pathname, query }), utils_1.getURL());\n                return;\n            }\n            // Make sure we don't re-render on initial load,\n            // can be caused by navigating back from an external site\n            if (e.state &&\n                this.isSsr &&\n                e.state.as === this.asPath &&\n                url_1.parse(e.state.url).pathname === this.pathname) {\n                return;\n            }\n            // If the downstream application returns falsy, return.\n            // They will then be responsible for handling the event.\n            if (this._bps && !this._bps(e.state)) {\n                return;\n            }\n            const { url, as, options } = e.state;\n            if (process.env.NODE_ENV !== 'production') {\n                if (typeof url === 'undefined' || typeof as === 'undefined') {\n                    console.warn('`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/zeit/next.js/popstate-state-empty');\n                }\n            }\n            this.replace(url, as, options);\n        };\n        this._getStaticData = (asPath) => {\n            const pathname = prepareRoute(url_1.parse(asPath).pathname);\n            return process.env.NODE_ENV === 'production' && this.sdc[pathname]\n                ? Promise.resolve(this.sdc[pathname])\n                : fetchNextData(pathname, null, this.isSsr, data => (this.sdc[pathname] = data));\n        };\n        this._getServerData = (asPath) => {\n            let { pathname, query } = url_1.parse(asPath, true);\n            pathname = prepareRoute(pathname);\n            return fetchNextData(pathname, query, this.isSsr);\n        };\n        // represents the current component key\n        this.route = toRoute(pathname);\n        // set up the component cache (by route keys)\n        this.components = {};\n        // We should not keep the cache, if there's an error\n        // Otherwise, this cause issues when when going back and\n        // come again to the errored page.\n        if (pathname !== '/_error') {\n            this.components[this.route] = {\n                Component,\n                props: initialProps,\n                err,\n                __N_SSG: initialProps && initialProps.__N_SSG,\n                __N_SSP: initialProps && initialProps.__N_SSP,\n            };\n        }\n        this.components['/_app'] = { Component: App };\n        // Backwards compat for Router.router.events\n        // TODO: Should be remove the following major version as it was never documented\n        this.events = Router.events;\n        this.pageLoader = pageLoader;\n        this.pathname = pathname;\n        this.query = query;\n        // if auto prerendered and dynamic route wait to update asPath\n        // until after mount to prevent hydration mismatch\n        this.asPath =\n            // @ts-ignore this is temporarily global (attached to window)\n            is_dynamic_1.isDynamicRoute(pathname) && __NEXT_DATA__.autoExport ? pathname : as;\n        this.basePath = basePath;\n        this.sub = subscription;\n        this.clc = null;\n        this._wrapApp = wrapApp;\n        // make sure to ignore extra popState in safari on navigating\n        // back from external site\n        this.isSsr = true;\n        this.isFallback = isFallback;\n        if (typeof window !== 'undefined') {\n            // in order for `e.state` to work on the `onpopstate` event\n            // we have to register the initial route upon initialization\n            this.changeState('replaceState', utils_1.formatWithValidation({ pathname, query }), as);\n            window.addEventListener('popstate', this.onPopState);\n        }\n    }\n    // @deprecated backwards compatibility even though it's a private method.\n    static _rewriteUrlForNextExport(url) {\n        if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n            const rewriteUrlForNextExport = require('./rewrite-url-for-export')\n                .rewriteUrlForNextExport;\n            return rewriteUrlForNextExport(url);\n        }\n        else {\n            return url;\n        }\n    }\n    update(route, mod) {\n        const Component = mod.default || mod;\n        const data = this.components[route];\n        if (!data) {\n            throw new Error(`Cannot update unavailable route: ${route}`);\n        }\n        const newData = Object.assign(Object.assign({}, data), { Component, __N_SSG: mod.__N_SSG, __N_SSP: mod.__N_SSP });\n        this.components[route] = newData;\n        // pages/_app.js updated\n        if (route === '/_app') {\n            this.notify(this.components[this.route]);\n            return;\n        }\n        if (route === this.route) {\n            this.notify(newData);\n        }\n    }\n    reload() {\n        window.location.reload();\n    }\n    /**\n     * Go back in history\n     */\n    back() {\n        window.history.back();\n    }\n    /**\n     * Performs a `pushState` with arguments\n     * @param url of the route\n     * @param as masks `url` for the browser\n     * @param options object you can define `shallow` and other options\n     */\n    push(url, as = url, options = {}) {\n        return this.change('pushState', url, as, options);\n    }\n    /**\n     * Performs a `replaceState` with arguments\n     * @param url of the route\n     * @param as masks `url` for the browser\n     * @param options object you can define `shallow` and other options\n     */\n    replace(url, as = url, options = {}) {\n        return this.change('replaceState', url, as, options);\n    }\n    change(method, _url, _as, options) {\n        return new Promise((resolve, reject) => {\n            if (!options._h) {\n                this.isSsr = false;\n            }\n            // marking route changes as a navigation start entry\n            if (utils_1.ST) {\n                performance.mark('routeChange');\n            }\n            // If url and as provided as an object representation,\n            // we'll format them into the string version here.\n            let url = typeof _url === 'object' ? utils_1.formatWithValidation(_url) : _url;\n            let as = typeof _as === 'object' ? utils_1.formatWithValidation(_as) : _as;\n            url = addBasePath(url);\n            as = addBasePath(as);\n            // Add the ending slash to the paths. So, we can serve the\n            // \"<page>/index.html\" directly for the SSR page.\n            if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n                const rewriteUrlForNextExport = require('./rewrite-url-for-export')\n                    .rewriteUrlForNextExport;\n                // @ts-ignore this is temporarily global (attached to window)\n                if (__NEXT_DATA__.nextExport) {\n                    as = rewriteUrlForNextExport(as);\n                }\n            }\n            this.abortComponentLoad(as);\n            // If the url change is only related to a hash change\n            // We should not proceed. We should only change the state.\n            // WARNING: `_h` is an internal option for handing Next.js client-side\n            // hydration. Your app should _never_ use this property. It may change at\n            // any time without notice.\n            if (!options._h && this.onlyAHashChange(as)) {\n                this.asPath = as;\n                Router.events.emit('hashChangeStart', as);\n                this.changeState(method, url, as, options);\n                this.scrollToHash(as);\n                Router.events.emit('hashChangeComplete', as);\n                return resolve(true);\n            }\n            const { pathname, query, protocol } = url_1.parse(url, true);\n            if (!pathname || protocol) {\n                if (process.env.NODE_ENV !== 'production') {\n                    throw new Error(`Invalid href passed to router: ${url} https://err.sh/zeit/next.js/invalid-href-passed`);\n                }\n                return resolve(false);\n            }\n            // If asked to change the current URL we should reload the current page\n            // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n            // We also need to set the method = replaceState always\n            // as this should not go into the history (That's how browsers work)\n            // We should compare the new asPath to the current asPath, not the url\n            if (!this.urlIsNew(as)) {\n                method = 'replaceState';\n            }\n            const route = toRoute(pathname);\n            const { shallow = false } = options;\n            if (is_dynamic_1.isDynamicRoute(route)) {\n                const { pathname: asPathname } = url_1.parse(as);\n                const routeRegex = route_regex_1.getRouteRegex(route);\n                const routeMatch = route_matcher_1.getRouteMatcher(routeRegex)(asPathname);\n                if (!routeMatch) {\n                    const missingParams = Object.keys(routeRegex.groups).filter(param => !query[param]);\n                    if (missingParams.length > 0) {\n                        if (process.env.NODE_ENV !== 'production') {\n                            console.warn(`Mismatching \\`as\\` and \\`href\\` failed to manually provide ` +\n                                `the params: ${missingParams.join(', ')} in the \\`href\\`'s \\`query\\``);\n                        }\n                        return reject(new Error(`The provided \\`as\\` value (${asPathname}) is incompatible with the \\`href\\` value (${route}). ` +\n                            `Read more: https://err.sh/zeit/next.js/incompatible-href-as`));\n                    }\n                }\n                else {\n                    // Merge params into `query`, overwriting any specified in search\n                    Object.assign(query, routeMatch);\n                }\n            }\n            Router.events.emit('routeChangeStart', as);\n            // If shallow is true and the route exists in the router cache we reuse the previous result\n            this.getRouteInfo(route, pathname, query, as, shallow).then(routeInfo => {\n                const { error } = routeInfo;\n                if (error && error.cancelled) {\n                    return resolve(false);\n                }\n                Router.events.emit('beforeHistoryChange', as);\n                this.changeState(method, url, as, options);\n                if (process.env.NODE_ENV !== 'production') {\n                    const appComp = this.components['/_app'].Component;\n                    window.next.isPrerendered =\n                        appComp.getInitialProps === appComp.origGetInitialProps &&\n                            !routeInfo.Component.getInitialProps;\n                }\n                this.set(route, pathname, query, as, routeInfo);\n                if (error) {\n                    Router.events.emit('routeChangeError', error, as);\n                    throw error;\n                }\n                Router.events.emit('routeChangeComplete', as);\n                return resolve(true);\n            }, reject);\n        });\n    }\n    changeState(method, url, as, options = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (typeof window.history === 'undefined') {\n                console.error(`Warning: window.history is not available.`);\n                return;\n            }\n            if (typeof window.history[method] === 'undefined') {\n                console.error(`Warning: window.history.${method} is not available`);\n                return;\n            }\n        }\n        if (method !== 'pushState' || utils_1.getURL() !== as) {\n            window.history[method]({\n                url,\n                as,\n                options,\n            }, \n            // Most browsers currently ignores this parameter, although they may use it in the future.\n            // Passing the empty string here should be safe against future changes to the method.\n            // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n            '', as);\n        }\n    }\n    getRouteInfo(route, pathname, query, as, shallow = false) {\n        const cachedRouteInfo = this.components[route];\n        // If there is a shallow route transition possible\n        // If the route is already rendered on the screen.\n        if (shallow && cachedRouteInfo && this.route === route) {\n            return Promise.resolve(cachedRouteInfo);\n        }\n        const handleError = (err, loadErrorFail) => {\n            return new Promise(resolve => {\n                if (err.code === 'PAGE_LOAD_ERROR' || loadErrorFail) {\n                    // If we can't load the page it could be one of following reasons\n                    //  1. Page doesn't exists\n                    //  2. Page does exist in a different zone\n                    //  3. Internal error while loading the page\n                    // So, doing a hard reload is the proper way to deal with this.\n                    window.location.href = as;\n                    // Changing the URL doesn't block executing the current code path.\n                    // So, we need to mark it as a cancelled error and stop the routing logic.\n                    err.cancelled = true;\n                    // @ts-ignore TODO: fix the control flow here\n                    return resolve({ error: err });\n                }\n                if (err.cancelled) {\n                    // @ts-ignore TODO: fix the control flow here\n                    return resolve({ error: err });\n                }\n                resolve(this.fetchComponent('/_error')\n                    .then(res => {\n                    const { page: Component } = res;\n                    const routeInfo = { Component, err };\n                    return new Promise(resolve => {\n                        this.getInitialProps(Component, {\n                            err,\n                            pathname,\n                            query,\n                        }).then(props => {\n                            routeInfo.props = props;\n                            routeInfo.error = err;\n                            resolve(routeInfo);\n                        }, gipErr => {\n                            console.error('Error in error page `getInitialProps`: ', gipErr);\n                            routeInfo.error = err;\n                            routeInfo.props = {};\n                            resolve(routeInfo);\n                        });\n                    });\n                })\n                    .catch(err => handleError(err, true)));\n            });\n        };\n        return new Promise((resolve, reject) => {\n            if (cachedRouteInfo) {\n                return resolve(cachedRouteInfo);\n            }\n            this.fetchComponent(route).then(res => resolve({\n                Component: res.page,\n                __N_SSG: res.mod.__N_SSG,\n                __N_SSP: res.mod.__N_SSP,\n            }), reject);\n        })\n            .then((routeInfo) => {\n            const { Component, __N_SSG, __N_SSP } = routeInfo;\n            if (process.env.NODE_ENV !== 'production') {\n                const { isValidElementType } = require('react-is');\n                if (!isValidElementType(Component)) {\n                    throw new Error(`The default export is not a React Component in page: \"${pathname}\"`);\n                }\n            }\n            return this._getData(() => __N_SSG\n                ? this._getStaticData(as)\n                : __N_SSP\n                    ? this._getServerData(as)\n                    : this.getInitialProps(Component, \n                    // we provide AppTree later so this needs to be `any`\n                    {\n                        pathname,\n                        query,\n                        asPath: as,\n                    })).then(props => {\n                routeInfo.props = props;\n                this.components[route] = routeInfo;\n                return routeInfo;\n            });\n        })\n            .catch(handleError);\n    }\n    set(route, pathname, query, as, data) {\n        this.isFallback = false;\n        this.route = route;\n        this.pathname = pathname;\n        this.query = query;\n        this.asPath = as;\n        this.notify(data);\n    }\n    /**\n     * Callback to execute before replacing router state\n     * @param cb callback to be executed\n     */\n    beforePopState(cb) {\n        this._bps = cb;\n    }\n    onlyAHashChange(as) {\n        if (!this.asPath)\n            return false;\n        const [oldUrlNoHash, oldHash] = this.asPath.split('#');\n        const [newUrlNoHash, newHash] = as.split('#');\n        // Makes sure we scroll to the provided hash if the url/hash are the same\n        if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n            return true;\n        }\n        // If the urls are change, there's more than a hash change\n        if (oldUrlNoHash !== newUrlNoHash) {\n            return false;\n        }\n        // If the hash has changed, then it's a hash only change.\n        // This check is necessary to handle both the enter and\n        // leave hash === '' cases. The identity case falls through\n        // and is treated as a next reload.\n        return oldHash !== newHash;\n    }\n    scrollToHash(as) {\n        const [, hash] = as.split('#');\n        // Scroll to top if the hash is just `#` with no value\n        if (hash === '') {\n            window.scrollTo(0, 0);\n            return;\n        }\n        // First we check if the element by id is found\n        const idEl = document.getElementById(hash);\n        if (idEl) {\n            idEl.scrollIntoView();\n            return;\n        }\n        // If there's no element with the id, we check the `name` property\n        // To mirror browsers\n        const nameEl = document.getElementsByName(hash)[0];\n        if (nameEl) {\n            nameEl.scrollIntoView();\n        }\n    }\n    urlIsNew(asPath) {\n        return this.asPath !== asPath;\n    }\n    /**\n     * Prefetch page code, you may wait for the data during page rendering.\n     * This feature only works in production!\n     * @param url the href of prefetched page\n     * @param asPath the as path of the prefetched page\n     */\n    prefetch(url, asPath = url, options = {}) {\n        return new Promise((resolve, reject) => {\n            const { pathname, protocol } = url_1.parse(url);\n            if (!pathname || protocol) {\n                if (process.env.NODE_ENV !== 'production') {\n                    throw new Error(`Invalid href passed to router: ${url} https://err.sh/zeit/next.js/invalid-href-passed`);\n                }\n                return;\n            }\n            // Prefetch is not supported in development mode because it would trigger on-demand-entries\n            if (process.env.NODE_ENV !== 'production') {\n                return;\n            }\n            const route = delBasePath(toRoute(pathname));\n            Promise.all([\n                this.pageLoader.prefetchData(url, delBasePath(asPath)),\n                this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route),\n            ]).then(() => resolve(), reject);\n        });\n    }\n    async fetchComponent(route) {\n        let cancelled = false;\n        const cancel = (this.clc = () => {\n            cancelled = true;\n        });\n        route = delBasePath(route);\n        const componentResult = await this.pageLoader.loadPage(route);\n        if (cancelled) {\n            const error = new Error(`Abort fetching component for route: \"${route}\"`);\n            error.cancelled = true;\n            throw error;\n        }\n        if (cancel === this.clc) {\n            this.clc = null;\n        }\n        return componentResult;\n    }\n    _getData(fn) {\n        let cancelled = false;\n        const cancel = () => {\n            cancelled = true;\n        };\n        this.clc = cancel;\n        return fn().then(data => {\n            if (cancel === this.clc) {\n                this.clc = null;\n            }\n            if (cancelled) {\n                const err = new Error('Loading initial props cancelled');\n                err.cancelled = true;\n                throw err;\n            }\n            return data;\n        });\n    }\n    getInitialProps(Component, ctx) {\n        const { Component: App } = this.components['/_app'];\n        const AppTree = this._wrapApp(App);\n        ctx.AppTree = AppTree;\n        return utils_1.loadGetInitialProps(App, {\n            AppTree,\n            Component,\n            router: this,\n            ctx,\n        });\n    }\n    abortComponentLoad(as) {\n        if (this.clc) {\n            const e = new Error('Route Cancelled');\n            e.cancelled = true;\n            Router.events.emit('routeChangeError', e, as);\n            this.clc();\n            this.clc = null;\n        }\n    }\n    notify(data) {\n        this.sub(data, this.components['/_app'].Component);\n    }\n}\nexports.default = Router;\nRouter.events = mitt_1.default();\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}