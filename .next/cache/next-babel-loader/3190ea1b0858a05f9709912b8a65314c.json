{"ast":null,"code":"var _jsxFileName = \"F:\\\\Next\\\\google-books\\\\components\\\\BookDetails.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Row, Col, Image } from 'react-bootstrap';\nimport Moment from 'react-moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBookOpen } from '@fortawesome/free-solid-svg-icons';\nimport { faFilePdf } from '@fortawesome/free-solid-svg-icons';\nimport { isEmpty, truncate, languages } from '../utils';\nimport { BookMeta, BookRating, Loading } from '../components';\n\nconst BookDetails = props => {\n  let title, imageLink, averageRating, ratingsCount, publishedDate, authors, pageCount, categories, language, description, pdfLink, webReaderLink;\n  const {\n    addBooklist\n  } = props; // Set treatise to variables\n\n  if (!isEmpty(props.data)) {\n    const {\n      volumeInfo,\n      accessInfo\n    } = props.data;\n    title = volumeInfo.title;\n\n    if (volumeInfo.imageLinks !== undefined && !isEmpty(volumeInfo.imageLinks)) {\n      imageLink = volumeInfo.imageLinks.thumbnail;\n    }\n\n    averageRating = volumeInfo.averageRating;\n    ratingsCount = volumeInfo.ratingsCount;\n    publishedDate = volumeInfo.publishedDate;\n    authors = volumeInfo.authors;\n    pageCount = volumeInfo.pageCount;\n    categories = volumeInfo.categories;\n    language = volumeInfo.language;\n    description = volumeInfo.description;\n\n    if (accessInfo.pdf !== undefined && !isEmpty(accessInfo.pdf)) {\n      if (accessInfo.pdf.isAvailable) {\n        pdfLink = accessInfo.pdf.acsTokenLink;\n      }\n    }\n\n    webReaderLink = accessInfo.webReaderLink;\n  }\n\n  return __jsx(\"article\", {\n    className: \"BookDetails\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, !isEmpty(props.data) ? __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, __jsx(Image, {\n    src: imageLink !== undefined ? imageLink : './static/empty-cover.jpeg',\n    thumbnail: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }), __jsx(BookRating, {\n    rating: averageRating,\n    count: ratingsCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  })), __jsx(Col, {\n    md: \"9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: \"BookDetails-Heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, title, publishedDate !== undefined && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 50\n    }\n  }, \" \\u2013 \", __jsx(Moment, {\n    date: new Date(publishedDate),\n    format: \"YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 59\n    }\n  }))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, authors !== undefined && authors.length > 0 && __jsx(BookMeta, {\n    name: \"Author\",\n    value: authors.join(', '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 66\n    }\n  }), pageCount !== undefined && __jsx(BookMeta, {\n    name: \"Page number\",\n    value: pageCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 46\n    }\n  }), categories !== undefined && __jsx(BookMeta, {\n    name: \"Category\",\n    value: categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 47\n    }\n  }), language !== undefined && __jsx(BookMeta, {\n    name: \"Language\",\n    value: languages.filter(item => {\n      return item.code === language;\n    })[0].name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 45\n    }\n  })), description !== undefined && __jsx(\"p\", {\n    className: \"BookDetails-Desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 46\n    }\n  }, truncate(description, 500).replace(/<[^>]+>/g, '')), webReaderLink !== undefined && __jsx(\"a\", {\n    target: \"_blink\",\n    href: webReaderLink,\n    className: \"btn btn-success mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faBookOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 20\n    }\n  }), \"Read Now\"), pdfLink !== undefined && __jsx(\"a\", {\n    target: \"_blink\",\n    href: pdfLink,\n    className: \"btn btn-danger mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faFilePdf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 20\n    }\n  }), \"Download PDF\"), __jsx(\"button\", {\n    onClick: () => addBooklist(),\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"Add to Booklist\"))) : __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 20\n    }\n  }));\n};\n\nexport default BookDetails;","map":{"version":3,"sources":["F:/Next/google-books/components/BookDetails.js"],"names":["Row","Col","Image","Moment","FontAwesomeIcon","faBookOpen","faFilePdf","isEmpty","truncate","languages","BookMeta","BookRating","Loading","BookDetails","props","title","imageLink","averageRating","ratingsCount","publishedDate","authors","pageCount","categories","language","description","pdfLink","webReaderLink","addBooklist","data","volumeInfo","accessInfo","imageLinks","undefined","thumbnail","pdf","isAvailable","acsTokenLink","Date","length","join","filter","item","code","name","replace"],"mappings":"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","sourcesContent":["import { Row, Col, Image } from 'react-bootstrap';\r\nimport Moment from 'react-moment';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBookOpen } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFilePdf } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { isEmpty, truncate, languages } from '../utils';\r\nimport { BookMeta, BookRating, Loading } from '../components';\r\n\r\nconst BookDetails = ( props ) => {\r\n  let title, imageLink, averageRating, ratingsCount, publishedDate, authors, pageCount, categories, language, description, pdfLink, webReaderLink;\r\n  const { addBooklist } = props;\r\n  // Set treatise to variables\r\n  if (!isEmpty(props.data)) {\r\n    const { volumeInfo, accessInfo } = props.data;\r\n\r\n    title         = volumeInfo.title;\r\n    if (volumeInfo.imageLinks !== undefined && !isEmpty(volumeInfo.imageLinks)) {\r\n      imageLink   = volumeInfo.imageLinks.thumbnail;\r\n    }\r\n    averageRating = volumeInfo.averageRating;\r\n    ratingsCount  = volumeInfo.ratingsCount;\r\n    publishedDate = volumeInfo.publishedDate;\r\n    authors       = volumeInfo.authors;\r\n    pageCount     = volumeInfo.pageCount;\r\n    categories    = volumeInfo.categories;\r\n    language      = volumeInfo.language;\r\n    description   = volumeInfo.description;\r\n    if (accessInfo.pdf !== undefined && !isEmpty(accessInfo.pdf)) {\r\n      if (accessInfo.pdf.isAvailable) {\r\n        pdfLink   = accessInfo.pdf.acsTokenLink;\r\n      }\r\n    }\r\n    webReaderLink = accessInfo.webReaderLink;\r\n  }\r\n  \r\n  return (\r\n    <article className=\"BookDetails\">\r\n      {\r\n        !isEmpty(props.data) ?\r\n          <Row>\r\n            <Col md=\"3\">\r\n              <Image src={imageLink !== undefined ? imageLink : './static/empty-cover.jpeg'} thumbnail />\r\n              <BookRating rating={averageRating} count={ratingsCount} />\r\n            </Col>\r\n            <Col md=\"9\">\r\n              <h1 className=\"BookDetails-Heading\">\r\n                {title}\r\n                { publishedDate !== undefined && <span> – <Moment date={new Date(publishedDate)} format=\"YYYY\" /></span> }\r\n              </h1>\r\n              <Row>\r\n                { authors !== undefined && authors.length > 0 && <BookMeta name=\"Author\" value={authors.join(', ')} /> }\r\n                { pageCount !== undefined && <BookMeta name=\"Page number\" value={pageCount} /> }\r\n                { categories !== undefined && <BookMeta name=\"Category\" value={categories} /> }\r\n                { language !== undefined && <BookMeta name=\"Language\" value={languages.filter(item => { return item.code === language })[0].name} /> }\r\n              </Row>\r\n              { description !== undefined && <p className=\"BookDetails-Desc\">{truncate(description, 500).replace(/<[^>]+>/g, '')}</p> }\r\n              {\r\n                webReaderLink !== undefined &&\r\n                  <a \r\n                    target=\"_blink\"\r\n                    href={webReaderLink}\r\n                    className=\"btn btn-success mr-3\"\r\n                  ><FontAwesomeIcon icon={faBookOpen} />Read Now</a> \r\n              }\r\n              {\r\n                pdfLink !== undefined &&\r\n                  <a \r\n                    target=\"_blink\"\r\n                    href={pdfLink}\r\n                    className=\"btn btn-danger mr-3\"\r\n                  ><FontAwesomeIcon icon={faFilePdf} />Download PDF</a>\r\n              }\r\n              <button \r\n                onClick={() => addBooklist()}\r\n                className=\"btn btn-primary\"\r\n              >Add to Booklist</button>\r\n            </Col>\r\n          </Row> : <Loading />\r\n      }\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default BookDetails;"]},"metadata":{},"sourceType":"module"}