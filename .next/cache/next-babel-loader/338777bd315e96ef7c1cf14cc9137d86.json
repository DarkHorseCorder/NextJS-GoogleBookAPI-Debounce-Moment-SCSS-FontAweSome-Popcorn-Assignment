{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Next\\\\google-books\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport fetch from 'isomorphic-unfetch';\nimport { Layout, SearchBar, BookDetails } from '../components';\n\nvar Homepage = function Homepage() {\n  var _useState = useState({\n    keyword: '',\n    items: [],\n    item: {}\n  }),\n      treatise = _useState[0],\n      setTreatise = _useState[1]; // Search book by keyword\n\n\n  var searchHandler = function searchHandler(e) {\n    var keyword = e.target.value;\n\n    if (keyword) {\n      fetch(\"\".concat(process.env.apiUrl, \"/volumes?q=\").concat(keyword, \"&maxResults=5\")).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (data.totalItems > 0) {\n          setTreatise(_objectSpread({}, treatise, {\n            keyword: keyword,\n            items: data.items\n          }));\n        }\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    } else {\n      setTreatise(_objectSpread({}, treatise, {\n        items: []\n      }));\n    }\n  }; // Get specific treatise\n\n\n  var getTreatiseHandler = function getTreatiseHandler(id) {\n    var items = treatise.items;\n    var targetItem = items.filter(function (item) {\n      return item.id === id;\n    })[0];\n    setTreatise({\n      keyword: '',\n      items: [],\n      item: targetItem\n    });\n  };\n\n  var isEmptyObject = function isEmptyObject(obj) {\n    return Object.keys(obj).length === 0;\n  };\n\n  var keyword = treatise.keyword,\n      items = treatise.items,\n      item = treatise.item;\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    md: {\n      span: 8,\n      offset: 2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, __jsx(SearchBar, {\n    value: keyword,\n    data: items,\n    changeHandler: searchHandler,\n    clickHandler: getTreatiseHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), isEmptyObject(item) ? __jsx(React.Fragment, null) : __jsx(BookDetails, {\n    data: item,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 45\n    }\n  })))));\n};\n\nexport default Homepage;","map":{"version":3,"sources":["F:/Next/google-books/pages/index.js"],"names":["useState","Container","Row","Col","fetch","Layout","SearchBar","BookDetails","Homepage","keyword","items","item","treatise","setTreatise","searchHandler","e","target","value","process","env","apiUrl","then","res","json","data","totalItems","err","console","log","getTreatiseHandler","id","targetItem","filter","isEmptyObject","obj","Object","keys","length","span","offset"],"mappings":";;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,WAA5B,QAA+C,eAA/C;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBACWR,QAAQ,CAAC;AACvCS,IAAAA,OAAO,EAAE,EAD8B;AAEvCC,IAAAA,KAAK,EAAE,EAFgC;AAGvCC,IAAAA,IAAI,EAAE;AAHiC,GAAD,CADnB;AAAA,MACdC,QADc;AAAA,MACJC,WADI,iBAOrB;;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAEC,CAAF,EAAS;AAC7B,QAAMN,OAAO,GAAGM,CAAC,CAACC,MAAF,CAASC,KAAzB;;AAEA,QAAIR,OAAJ,EAAa;AACXL,MAAAA,KAAK,WAAIc,OAAO,CAACC,GAAR,CAAYC,MAAhB,wBAAoCX,OAApC,mBAAL,CACGY,IADH,CACS,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADZ,EAEGF,IAFH,CAES,UAAAG,IAAI,EAAI;AACb,YAAIA,IAAI,CAACC,UAAL,GAAkB,CAAtB,EAAyB;AACvBZ,UAAAA,WAAW,mBACND,QADM;AAETH,YAAAA,OAAO,EAAEA,OAFA;AAGTC,YAAAA,KAAK,EAAEc,IAAI,CAACd;AAHH,aAAX;AAKD;AACF,OAVH,WAWU,UAACgB,GAAD;AAAA,eAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA,OAXV;AAYD,KAbD,MAaO;AACLb,MAAAA,WAAW,mBACND,QADM;AAETF,QAAAA,KAAK,EAAE;AAFE,SAAX;AAID;AACF,GAtBD,CARqB,CAgCrB;;;AACA,MAAMmB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAEC,EAAF,EAAU;AAAA,QAC3BpB,KAD2B,GACjBE,QADiB,CAC3BF,KAD2B;AAEnC,QAAMqB,UAAU,GAAGrB,KAAK,CAACsB,MAAN,CAAa,UAAArB,IAAI,EAAI;AAAE,aAAOA,IAAI,CAACmB,EAAL,KAAYA,EAAnB;AAAuB,KAA9C,EAAgD,CAAhD,CAAnB;AAEAjB,IAAAA,WAAW,CAAC;AACVJ,MAAAA,OAAO,EAAE,EADC;AAEVC,MAAAA,KAAK,EAAE,EAFG;AAGVC,MAAAA,IAAI,EAAEoB;AAHI,KAAD,CAAX;AAKD,GATD;;AAWA,MAAME,aAAa,GAAG,SAAhBA,aAAgB,CAAEC,GAAF,EAAW;AAC/B,WAAOC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,MAAjB,KAA4B,CAAnC;AACD,GAFD;;AA5CqB,MAgDb5B,OAhDa,GAgDYG,QAhDZ,CAgDbH,OAhDa;AAAA,MAgDJC,KAhDI,GAgDYE,QAhDZ,CAgDJF,KAhDI;AAAA,MAgDGC,IAhDH,GAgDYC,QAhDZ,CAgDGD,IAhDH;AAkDrB,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAE2B,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,MAAM,EAAE;AAAnB,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAE9B,OADT;AAEE,IAAA,IAAI,EAAEC,KAFR;AAGE,IAAA,aAAa,EAAEI,aAHjB;AAIE,IAAA,YAAY,EAAEe,kBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQII,aAAa,CAACtB,IAAD,CAAb,GAAsB,2BAAtB,GAA8B,MAAC,WAAD;AAAa,IAAA,IAAI,EAAEA,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARlC,CADF,CADF,CADF,CADF;AAmBD,CArED;;AAuEA,eAAeH,QAAf","sourcesContent":["import { useState } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nimport { Layout, SearchBar, BookDetails } from '../components';\r\n\r\nconst Homepage = () => {\r\n  const [treatise, setTreatise] = useState({\r\n    keyword: '',\r\n    items: [],\r\n    item: {}\r\n  });\r\n\r\n  // Search book by keyword\r\n  const searchHandler = ( e ) => {\r\n    const keyword = e.target.value;\r\n\r\n    if (keyword) {\r\n      fetch(`${process.env.apiUrl}/volumes?q=${keyword}&maxResults=5`)\r\n        .then( res => res.json() )\r\n        .then( data => {\r\n          if (data.totalItems > 0) {\r\n            setTreatise({ \r\n              ...treatise,\r\n              keyword: keyword,\r\n              items: data.items\r\n            });\r\n          }\r\n        })\r\n        .catch( (err) => console.log(err) );\r\n    } else {\r\n      setTreatise({ \r\n        ...treatise,\r\n        items: [] \r\n      });\r\n    }\r\n  }\r\n\r\n  // Get specific treatise\r\n  const getTreatiseHandler = ( id ) => {\r\n    const { items } = treatise;\r\n    const targetItem = items.filter(item => { return item.id === id })[0];\r\n    \r\n    setTreatise({\r\n      keyword: '',\r\n      items: [],\r\n      item: targetItem\r\n    });\r\n  }\r\n\r\n  const isEmptyObject = ( obj ) => {\r\n    return Object.keys(obj).length === 0;\r\n  }\r\n\r\n  const { keyword, items, item } = treatise;\r\n  \r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        <Row>\r\n          <Col md={{ span: 8, offset: 2 }}>\r\n            <SearchBar\r\n              value={keyword}\r\n              data={items}\r\n              changeHandler={searchHandler}\r\n              clickHandler={getTreatiseHandler}\r\n            />\r\n            {\r\n              isEmptyObject(item) ? <></> : <BookDetails data={item} />\r\n            }\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Homepage;"]},"metadata":{},"sourceType":"module"}