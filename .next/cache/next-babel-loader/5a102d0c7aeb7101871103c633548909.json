{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nexports.__esModule = true;\nexports.observeLayoutShift = observeLayoutShift;\nexports.observeLargestContentfulPaint = observeLargestContentfulPaint;\nexports.observePaint = observePaint;\nfunction isTypeSupported(type) {\n  if (self.PerformanceObserver && PerformanceObserver.supportedEntryTypes) {\n    return PerformanceObserver.supportedEntryTypes.includes(type);\n  }\n  return false;\n}\nfunction observeLayoutShift(onPerfEntry) {\n  if (isTypeSupported('layout-shift')) {\n    var cumulativeScore = 0;\n    var observer = new PerformanceObserver(function (list) {\n      var _iterator = _createForOfIteratorHelper(list.getEntries()),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var entry = _step.value;\n          // Only count layout shifts without recent user input.\n          if (!entry.hadRecentInput) {\n            cumulativeScore += entry.value;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    });\n    observer.observe({\n      type: 'layout-shift',\n      buffered: true\n    });\n    document.addEventListener('visibilitychange', function clsObserver() {\n      if (document.visibilityState === 'hidden') {\n        // Force any pending records to be dispatched.\n        observer.takeRecords();\n        observer.disconnect();\n        document.removeEventListener('visibilitychange', clsObserver, true);\n        onPerfEntry({\n          name: 'cumulative-layout-shift',\n          value: cumulativeScore\n        });\n      }\n    }, true);\n  }\n}\nfunction observeLargestContentfulPaint(onPerfEntry) {\n  if (isTypeSupported('largest-contentful-paint')) {\n    // Create a variable to hold the latest LCP value (since it can change).\n    var lcp; // Create the PerformanceObserver instance.\n    var observer = new PerformanceObserver(function (entryList) {\n      var entries = entryList.getEntries();\n      var lastEntry = entries[entries.length - 1];\n      lcp = lastEntry.renderTime || lastEntry.loadTime;\n    });\n    observer.observe({\n      type: 'largest-contentful-paint',\n      buffered: true\n    });\n    document.addEventListener('visibilitychange', function lcpObserver() {\n      if (lcp && document.visibilityState === 'hidden') {\n        document.removeEventListener('visibilitychange', lcpObserver, true);\n        onPerfEntry({\n          name: 'largest-contentful-paint',\n          value: lcp\n        });\n      }\n    }, true);\n  }\n}\nfunction observePaint(onPerfEntry) {\n  var observer = new PerformanceObserver(function (list) {\n    list.getEntries().forEach(onPerfEntry);\n  });\n  observer.observe({\n    type: 'paint',\n    buffered: true\n  });\n}","map":{"version":3,"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","exports","__esModule","observeLayoutShift","observeLargestContentfulPaint","observePaint","isTypeSupported","type","self","PerformanceObserver","supportedEntryTypes","includes","onPerfEntry","cumulativeScore","observer","list","_iterator","getEntries","_step","entry","hadRecentInput","observe","buffered","document","addEventListener","clsObserver","visibilityState","takeRecords","disconnect","removeEventListener","lcp","entryList","entries","lastEntry","renderTime","loadTime","lcpObserver","forEach"],"sources":["F:/Next/google-books/node_modules/next/dist/client/performance-relayer.js"],"sourcesContent":["\"use strict\";exports.__esModule=true;exports.observeLayoutShift=observeLayoutShift;exports.observeLargestContentfulPaint=observeLargestContentfulPaint;exports.observePaint=observePaint;function isTypeSupported(type){if(self.PerformanceObserver&&PerformanceObserver.supportedEntryTypes){return PerformanceObserver.supportedEntryTypes.includes(type);}return false;}function observeLayoutShift(onPerfEntry){if(isTypeSupported('layout-shift')){var cumulativeScore=0;var observer=new PerformanceObserver(list=>{for(var entry of list.getEntries()){// Only count layout shifts without recent user input.\nif(!entry.hadRecentInput){cumulativeScore+=entry.value;}}});observer.observe({type:'layout-shift',buffered:true});document.addEventListener('visibilitychange',function clsObserver(){if(document.visibilityState==='hidden'){// Force any pending records to be dispatched.\nobserver.takeRecords();observer.disconnect();document.removeEventListener('visibilitychange',clsObserver,true);onPerfEntry({name:'cumulative-layout-shift',value:cumulativeScore});}},true);}}function observeLargestContentfulPaint(onPerfEntry){if(isTypeSupported('largest-contentful-paint')){// Create a variable to hold the latest LCP value (since it can change).\nvar lcp;// Create the PerformanceObserver instance.\nvar observer=new PerformanceObserver(entryList=>{var entries=entryList.getEntries();var lastEntry=entries[entries.length-1];lcp=lastEntry.renderTime||lastEntry.loadTime;});observer.observe({type:'largest-contentful-paint',buffered:true});document.addEventListener('visibilitychange',function lcpObserver(){if(lcp&&document.visibilityState==='hidden'){document.removeEventListener('visibilitychange',lcpObserver,true);onPerfEntry({name:'largest-contentful-paint',value:lcp});}},true);}}function observePaint(onPerfEntry){var observer=new PerformanceObserver(list=>{list.getEntries().forEach(onPerfEntry);});observer.observe({type:'paint',buffered:true});}"],"mappings":"AAAA,YAAY;;AAAC,SAAAA,2BAAAC,CAAA,EAAAC,cAAA,QAAAC,EAAA,UAAAC,MAAA,oBAAAH,CAAA,CAAAG,MAAA,CAAAC,QAAA,KAAAJ,CAAA,qBAAAE,EAAA,QAAAG,KAAA,CAAAC,OAAA,CAAAN,CAAA,MAAAE,EAAA,GAAAK,2BAAA,CAAAP,CAAA,MAAAC,cAAA,IAAAD,CAAA,WAAAA,CAAA,CAAAQ,MAAA,qBAAAN,EAAA,EAAAF,CAAA,GAAAE,EAAA,MAAAO,CAAA,UAAAC,CAAA,YAAAA,EAAA,eAAAC,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAA,EAAA,QAAAH,CAAA,IAAAT,CAAA,CAAAQ,MAAA,WAAAK,IAAA,mBAAAA,IAAA,SAAAC,KAAA,EAAAd,CAAA,CAAAS,CAAA,UAAAM,CAAA,WAAAA,EAAAC,EAAA,UAAAA,EAAA,KAAAC,CAAA,EAAAP,CAAA,gBAAAQ,SAAA,iJAAAC,gBAAA,SAAAC,MAAA,UAAAC,GAAA,WAAAV,CAAA,WAAAA,EAAA,IAAAT,EAAA,GAAAA,EAAA,CAAAoB,IAAA,CAAAtB,CAAA,MAAAY,CAAA,WAAAA,EAAA,QAAAW,IAAA,GAAArB,EAAA,CAAAsB,IAAA,IAAAL,gBAAA,GAAAI,IAAA,CAAAV,IAAA,SAAAU,IAAA,KAAAR,CAAA,WAAAA,EAAAU,GAAA,IAAAL,MAAA,SAAAC,GAAA,GAAAI,GAAA,KAAAR,CAAA,WAAAA,EAAA,eAAAE,gBAAA,IAAAjB,EAAA,oBAAAA,EAAA,8BAAAkB,MAAA,QAAAC,GAAA;AAAA,SAAAd,4BAAAP,CAAA,EAAA0B,MAAA,SAAA1B,CAAA,qBAAAA,CAAA,sBAAA2B,iBAAA,CAAA3B,CAAA,EAAA0B,MAAA,OAAAd,CAAA,GAAAgB,MAAA,CAAAC,SAAA,CAAAC,QAAA,CAAAR,IAAA,CAAAtB,CAAA,EAAA+B,KAAA,aAAAnB,CAAA,iBAAAZ,CAAA,CAAAgC,WAAA,EAAApB,CAAA,GAAAZ,CAAA,CAAAgC,WAAA,CAAAC,IAAA,MAAArB,CAAA,cAAAA,CAAA,mBAAAP,KAAA,CAAA6B,IAAA,CAAAlC,CAAA,OAAAY,CAAA,+DAAAuB,IAAA,CAAAvB,CAAA,UAAAe,iBAAA,CAAA3B,CAAA,EAAA0B,MAAA;AAAA,SAAAC,kBAAAS,GAAA,EAAAC,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAD,GAAA,CAAA5B,MAAA,EAAA6B,GAAA,GAAAD,GAAA,CAAA5B,MAAA,WAAAC,CAAA,MAAA6B,IAAA,OAAAjC,KAAA,CAAAgC,GAAA,GAAA5B,CAAA,GAAA4B,GAAA,EAAA5B,CAAA,IAAA6B,IAAA,CAAA7B,CAAA,IAAA2B,GAAA,CAAA3B,CAAA,UAAA6B,IAAA;AAAAC,OAAO,CAACC,UAAU,GAAC,IAAI;AAACD,OAAO,CAACE,kBAAkB,GAACA,kBAAkB;AAACF,OAAO,CAACG,6BAA6B,GAACA,6BAA6B;AAACH,OAAO,CAACI,YAAY,GAACA,YAAY;AAAC,SAASC,eAAeA,CAACC,IAAI,EAAC;EAAC,IAAGC,IAAI,CAACC,mBAAmB,IAAEA,mBAAmB,CAACC,mBAAmB,EAAC;IAAC,OAAOD,mBAAmB,CAACC,mBAAmB,CAACC,QAAQ,CAACJ,IAAI,CAAC;EAAC;EAAC,OAAO,KAAK;AAAC;AAAC,SAASJ,kBAAkBA,CAACS,WAAW,EAAC;EAAC,IAAGN,eAAe,CAAC,cAAc,CAAC,EAAC;IAAC,IAAIO,eAAe,GAAC,CAAC;IAAC,IAAIC,QAAQ,GAAC,IAAIL,mBAAmB,CAAC,UAAAM,IAAI,EAAE;MAAA,IAAAC,SAAA,GAAAvD,0BAAA,CAAkBsD,IAAI,CAACE,UAAU,CAAC,CAAC;QAAAC,KAAA;MAAA;QAAlC,KAAAF,SAAA,CAAA3C,CAAA,MAAA6C,KAAA,GAAAF,SAAA,CAAA1C,CAAA,IAAAC,IAAA,GAAmC;UAAA,IAA3B4C,KAAK,GAAAD,KAAA,CAAA1C,KAAA;UAAuB;UAC9hB,IAAG,CAAC2C,KAAK,CAACC,cAAc,EAAC;YAACP,eAAe,IAAEM,KAAK,CAAC3C,KAAK;UAAC;QAAC;MAAC,SAAAO,GAAA;QAAAiC,SAAA,CAAAvC,CAAA,CAAAM,GAAA;MAAA;QAAAiC,SAAA,CAAArC,CAAA;MAAA;IAAA,CAAC,CAAC;IAACmC,QAAQ,CAACO,OAAO,CAAC;MAACd,IAAI,EAAC,cAAc;MAACe,QAAQ,EAAC;IAAI,CAAC,CAAC;IAACC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAC,SAASC,WAAWA,CAAA,EAAE;MAAC,IAAGF,QAAQ,CAACG,eAAe,KAAG,QAAQ,EAAC;QAAC;QAC9NZ,QAAQ,CAACa,WAAW,CAAC,CAAC;QAACb,QAAQ,CAACc,UAAU,CAAC,CAAC;QAACL,QAAQ,CAACM,mBAAmB,CAAC,kBAAkB,EAACJ,WAAW,EAAC,IAAI,CAAC;QAACb,WAAW,CAAC;UAACjB,IAAI,EAAC,yBAAyB;UAACnB,KAAK,EAACqC;QAAe,CAAC,CAAC;MAAC;IAAC,CAAC,EAAC,IAAI,CAAC;EAAC;AAAC;AAAC,SAAST,6BAA6BA,CAACQ,WAAW,EAAC;EAAC,IAAGN,eAAe,CAAC,0BAA0B,CAAC,EAAC;IAAC;IAClS,IAAIwB,GAAG,CAAC;IACR,IAAIhB,QAAQ,GAAC,IAAIL,mBAAmB,CAAC,UAAAsB,SAAS,EAAE;MAAC,IAAIC,OAAO,GAACD,SAAS,CAACd,UAAU,CAAC,CAAC;MAAC,IAAIgB,SAAS,GAACD,OAAO,CAACA,OAAO,CAAC9D,MAAM,GAAC,CAAC,CAAC;MAAC4D,GAAG,GAACG,SAAS,CAACC,UAAU,IAAED,SAAS,CAACE,QAAQ;IAAC,CAAC,CAAC;IAACrB,QAAQ,CAACO,OAAO,CAAC;MAACd,IAAI,EAAC,0BAA0B;MAACe,QAAQ,EAAC;IAAI,CAAC,CAAC;IAACC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAC,SAASY,WAAWA,CAAA,EAAE;MAAC,IAAGN,GAAG,IAAEP,QAAQ,CAACG,eAAe,KAAG,QAAQ,EAAC;QAACH,QAAQ,CAACM,mBAAmB,CAAC,kBAAkB,EAACO,WAAW,EAAC,IAAI,CAAC;QAACxB,WAAW,CAAC;UAACjB,IAAI,EAAC,0BAA0B;UAACnB,KAAK,EAACsD;QAAG,CAAC,CAAC;MAAC;IAAC,CAAC,EAAC,IAAI,CAAC;EAAC;AAAC;AAAC,SAASzB,YAAYA,CAACO,WAAW,EAAC;EAAC,IAAIE,QAAQ,GAAC,IAAIL,mBAAmB,CAAC,UAAAM,IAAI,EAAE;IAACA,IAAI,CAACE,UAAU,CAAC,CAAC,CAACoB,OAAO,CAACzB,WAAW,CAAC;EAAC,CAAC,CAAC;EAACE,QAAQ,CAACO,OAAO,CAAC;IAACd,IAAI,EAAC,OAAO;IAACe,QAAQ,EAAC;EAAI,CAAC,CAAC;AAAC"},"metadata":{},"sourceType":"script"}