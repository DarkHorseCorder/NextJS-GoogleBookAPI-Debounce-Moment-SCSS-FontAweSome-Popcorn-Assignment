{"ast":null,"code":"export var isEmpty = function isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n};\nexport var truncate = function truncate(source, size) {\n  return source.length > size ? source.slice(0, size - 1) + \"...\" : source;\n};\nexport var languages = [{\n  code: 'af',\n  name: 'Afrikaans'\n}, {\n  code: 'ga',\n  name: 'Irish'\n}, {\n  code: 'sq',\n  name: 'Albanian'\n}, {\n  code: 'it',\n  name: 'Italian'\n}, {\n  code: 'ar',\n  name: 'Arabic'\n}, {\n  code: 'ja',\n  name: 'Japanese'\n}, {\n  code: 'az',\n  name: 'Azerbaijani'\n}, {\n  code: 'kn',\n  name: 'Kannada'\n}, {\n  code: 'eu',\n  name: 'Basque'\n}, {\n  code: 'ko',\n  name: 'Korean'\n}, {\n  code: 'bn',\n  name: 'Bengali'\n}, {\n  code: 'la',\n  name: 'Latin'\n}, {\n  code: 'be',\n  name: 'Belarusian'\n}, {\n  code: 'lv',\n  name: 'Latvian'\n}, {\n  code: 'bg',\n  name: 'Bulgarian'\n}, {\n  code: 'lt',\n  name: 'Lithuanian'\n}, {\n  code: 'ca',\n  name: 'Catalan'\n}, {\n  code: 'mk',\n  name: 'Macedonian'\n}, {\n  code: 'zh-CN',\n  name: 'Chinese Simplified'\n}, {\n  code: 'ms',\n  name: 'Malay'\n}, {\n  code: 'zh-TW',\n  name: 'Chinese Traditional'\n}, {\n  code: 'mt',\n  name: 'Maltese'\n}, {\n  code: 'hr',\n  name: 'Croatian'\n}, {\n  code: 'no',\n  name: 'Norwegian'\n}, {\n  code: 'cs',\n  name: 'Czech'\n}, {\n  code: 'fa',\n  name: 'Persian'\n}, {\n  code: 'da',\n  name: 'Danish'\n}, {\n  code: 'pl',\n  name: 'Polish'\n}, {\n  code: 'nl',\n  name: 'Dutch'\n}, {\n  code: 'pt',\n  name: 'Portuguese'\n}, {\n  code: 'en',\n  name: 'English'\n}, {\n  code: 'ro',\n  name: 'Romanian'\n}, {\n  code: 'eo',\n  name: 'Esperanto'\n}, {\n  code: 'ru',\n  name: 'Russian'\n}, {\n  code: 'et',\n  name: 'Estonian'\n}, {\n  code: 'sr',\n  name: 'Serbian'\n}, {\n  code: 'tl',\n  name: 'Filipino'\n}, {\n  code: 'sk',\n  name: 'Slovak'\n}, {\n  code: 'fi',\n  name: 'Finnish'\n}, {\n  code: 'sl',\n  name: 'Slovenian'\n}, {\n  code: 'fr',\n  name: 'French'\n}, {\n  code: 'es',\n  name: 'Spanish'\n}, {\n  code: 'gl',\n  name: 'Galician'\n}, {\n  code: 'sw',\n  name: 'Swahili'\n}, {\n  code: 'ka',\n  name: 'Georgian'\n}, {\n  code: 'sv',\n  name: 'Swedish'\n}, {\n  code: 'de',\n  name: 'German'\n}, {\n  code: 'ta',\n  name: 'Tamil'\n}, {\n  code: 'el',\n  name: 'Greek'\n}, {\n  code: 'te',\n  name: 'Telugu'\n}, {\n  code: 'gu',\n  name: 'Gujarati'\n}, {\n  code: 'th',\n  name: 'Thai'\n}, {\n  code: 'ht',\n  name: 'Haitian Creole'\n}, {\n  code: 'tr',\n  name: 'Turkish'\n}, {\n  code: 'iw',\n  name: 'Hebrew'\n}, {\n  code: 'uk',\n  name: 'Ukrainian'\n}, {\n  code: 'hi',\n  name: 'Hindi'\n}, {\n  code: 'ur',\n  name: 'Urdu'\n}, {\n  code: 'hu',\n  name: 'Hungarian'\n}, {\n  code: 'vi',\n  name: 'Vietnamese'\n}, {\n  code: 'is',\n  name: 'Icelandic'\n}, {\n  code: 'cy',\n  name: 'Welsh'\n}, {\n  code: 'id',\n  name: 'Indonesian'\n}, {\n  code: 'yi',\n  name: 'Yiddish'\n}];","map":{"version":3,"names":["isEmpty","obj","Object","keys","length","truncate","source","size","slice","languages","code","name"],"sources":["F:/Next/google-books/utils/index.js"],"sourcesContent":["export const isEmpty = ( obj ) => {\r\n  return Object.keys(obj).length === 0;\r\n}\r\n\r\nexport const truncate = ( source, size ) => {\r\n  return source.length > size ? source.slice(0, size - 1) + \"...\" : source;\r\n}\r\n\r\nexport const languages = [\r\n  { code: 'af', name: 'Afrikaans' },\r\n  { code: 'ga', name: 'Irish' },\r\n  { code: 'sq', name: 'Albanian' },\r\n  { code: 'it', name: 'Italian' },\r\n  { code: 'ar', name: 'Arabic' },\r\n  { code: 'ja', name: 'Japanese' },\r\n  { code: 'az', name: 'Azerbaijani' },\r\n  { code: 'kn', name: 'Kannada' },\r\n  { code: 'eu', name: 'Basque' },\r\n  { code: 'ko', name: 'Korean' },\r\n  { code: 'bn', name: 'Bengali' },\r\n  { code: 'la', name: 'Latin' },\r\n  { code: 'be', name: 'Belarusian' },\r\n  { code: 'lv', name: 'Latvian' },\r\n  { code: 'bg', name: 'Bulgarian' },\r\n  { code: 'lt', name: 'Lithuanian' },\r\n  { code: 'ca', name: 'Catalan' },\r\n  { code: 'mk', name: 'Macedonian' },\r\n  { code: 'zh-CN', name: 'Chinese Simplified' },\r\n  { code: 'ms', name: 'Malay' },\r\n  { code: 'zh-TW', name: 'Chinese Traditional' },\r\n  { code: 'mt', name: 'Maltese' },\r\n  { code: 'hr', name: 'Croatian' },\r\n  { code: 'no', name: 'Norwegian' },\r\n  { code: 'cs', name: 'Czech' },\r\n  { code: 'fa', name: 'Persian' },\r\n  { code: 'da', name: 'Danish' },\r\n  { code: 'pl', name: 'Polish' },\r\n  { code: 'nl', name: 'Dutch' },\r\n  { code: 'pt', name: 'Portuguese' },\r\n  { code: 'en', name: 'English' },\r\n  { code: 'ro', name: 'Romanian' },\r\n  { code: 'eo', name: 'Esperanto' },\r\n  { code: 'ru', name: 'Russian' },\r\n  { code: 'et', name: 'Estonian' },\r\n  { code: 'sr', name: 'Serbian' },\r\n  { code: 'tl', name: 'Filipino' },\r\n  { code: 'sk', name: 'Slovak' },\r\n  { code: 'fi', name: 'Finnish' },\r\n  { code: 'sl', name: 'Slovenian' },\r\n  { code: 'fr', name: 'French' },\r\n  { code: 'es', name: 'Spanish' },\r\n  { code: 'gl', name: 'Galician' },\r\n  { code: 'sw', name: 'Swahili' },\r\n  { code: 'ka', name: 'Georgian' },\r\n  { code: 'sv', name: 'Swedish' },\r\n  { code: 'de', name: 'German' },\r\n  { code: 'ta', name: 'Tamil' },\r\n  { code: 'el', name: 'Greek' },\r\n  { code: 'te', name: 'Telugu' },\r\n  { code: 'gu', name: 'Gujarati' },\r\n  { code: 'th', name: 'Thai' },\r\n  { code: 'ht', name: 'Haitian Creole' },\r\n  { code: 'tr', name: 'Turkish' },\r\n  { code: 'iw', name: 'Hebrew' },\r\n  { code: 'uk', name: 'Ukrainian' },\r\n  { code: 'hi', name: 'Hindi' },\r\n  { code: 'ur', name: 'Urdu' },\r\n  { code: 'hu', name: 'Hungarian' },\r\n  { code: 'vi', name: 'Vietnamese' },\r\n  { code: 'is', name: 'Icelandic' },\r\n  { code: 'cy', name: 'Welsh' },\r\n  { code: 'id', name: 'Indonesian' },\r\n  { code: 'yi', name: 'Yiddish' }\r\n];"],"mappings":"AAAA,OAAO,IAAMA,OAAO,GAAG,SAAVA,OAAOA,CAAKC,GAAG,EAAM;EAChC,OAAOC,MAAM,CAACC,IAAI,CAACF,GAAG,CAAC,CAACG,MAAM,KAAK,CAAC;AACtC,CAAC;AAED,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAKC,MAAM,EAAEC,IAAI,EAAM;EAC1C,OAAOD,MAAM,CAACF,MAAM,GAAGG,IAAI,GAAGD,MAAM,CAACE,KAAK,CAAC,CAAC,EAAED,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,GAAGD,MAAM;AAC1E,CAAC;AAED,OAAO,IAAMG,SAAS,GAAG,CACvB;EAAEC,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAY,CAAC,EACjC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAQ,CAAC,EAC7B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAW,CAAC,EAChC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAW,CAAC,EAChC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAc,CAAC,EACnC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAQ,CAAC,EAC7B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAa,CAAC,EAClC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAY,CAAC,EACjC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAa,CAAC,EAClC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAa,CAAC,EAClC;EAAED,IAAI,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAqB,CAAC,EAC7C;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAQ,CAAC,EAC7B;EAAED,IAAI,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAsB,CAAC,EAC9C;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAW,CAAC,EAChC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAY,CAAC,EACjC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAQ,CAAC,EAC7B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAQ,CAAC,EAC7B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAa,CAAC,EAClC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAW,CAAC,EAChC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAY,CAAC,EACjC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAW,CAAC,EAChC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAW,CAAC,EAChC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAY,CAAC,EACjC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAW,CAAC,EAChC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAW,CAAC,EAChC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAQ,CAAC,EAC7B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAQ,CAAC,EAC7B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAW,CAAC,EAChC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAO,CAAC,EAC5B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAiB,CAAC,EACtC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAY,CAAC,EACjC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAQ,CAAC,EAC7B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAO,CAAC,EAC5B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAY,CAAC,EACjC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAa,CAAC,EAClC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAY,CAAC,EACjC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAQ,CAAC,EAC7B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAa,CAAC,EAClC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,CAChC"},"metadata":{},"sourceType":"module"}