{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Row, Col, Image } from 'react-bootstrap';\nimport Moment from 'react-moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBookOpen } from '@fortawesome/free-solid-svg-icons';\nimport { faFilePdf } from '@fortawesome/free-solid-svg-icons';\nimport { faFolderPlus } from '@fortawesome/free-solid-svg-icons';\nimport { isEmpty, truncate, languages } from '../utils';\nimport { BookMeta, BookRating, Loading } from '../components';\n\nconst BookDetails = props => {\n  let title, imageLink, averageRating, ratingsCount, publishedDate, authors, pageCount, categories, language, description, pdfLink, webReaderLink;\n  const {\n    addBooklist\n  } = props; // Set treatise to variables\n\n  if (!isEmpty(props.data)) {\n    const {\n      volumeInfo,\n      accessInfo\n    } = props.data;\n    title = volumeInfo.title;\n\n    if (volumeInfo.imageLinks !== undefined && !isEmpty(volumeInfo.imageLinks)) {\n      imageLink = volumeInfo.imageLinks.thumbnail;\n    }\n\n    averageRating = volumeInfo.averageRating;\n    ratingsCount = volumeInfo.ratingsCount;\n    publishedDate = volumeInfo.publishedDate;\n    authors = volumeInfo.authors;\n    pageCount = volumeInfo.pageCount;\n    categories = volumeInfo.categories;\n    language = volumeInfo.language;\n    description = volumeInfo.description;\n\n    if (accessInfo.pdf !== undefined && !isEmpty(accessInfo.pdf)) {\n      if (accessInfo.pdf.isAvailable) {\n        pdfLink = accessInfo.pdf.acsTokenLink;\n      }\n    }\n\n    webReaderLink = accessInfo.webReaderLink;\n  }\n\n  return __jsx(\"article\", {\n    className: \"BookDetails\"\n  }, !isEmpty(props.data) ? __jsx(Row, null, __jsx(Col, {\n    md: \"3\",\n    sm: \"12\"\n  }, __jsx(Image, {\n    src: imageLink !== undefined ? imageLink : './static/empty-cover.jpeg',\n    thumbnail: true\n  }), __jsx(BookRating, {\n    rating: averageRating,\n    count: ratingsCount\n  })), __jsx(Col, {\n    md: \"9\"\n  }, __jsx(\"h1\", {\n    className: \"BookDetails-Heading\"\n  }, title, publishedDate !== undefined && __jsx(\"span\", null, \" \\u2013 \", __jsx(Moment, {\n    date: new Date(publishedDate),\n    format: \"YYYY\"\n  }))), __jsx(Row, null, authors !== undefined && authors.length > 0 && __jsx(BookMeta, {\n    name: \"Author\",\n    value: authors.join(', ')\n  }), pageCount !== undefined && __jsx(BookMeta, {\n    name: \"Page number\",\n    value: pageCount\n  }), categories !== undefined && __jsx(BookMeta, {\n    name: \"Category\",\n    value: categories\n  }), language !== undefined && __jsx(BookMeta, {\n    name: \"Language\",\n    value: languages.filter(item => {\n      return item.code === language;\n    })[0].name\n  })), description !== undefined && __jsx(\"p\", {\n    className: \"BookDetails-Desc\"\n  }, truncate(description, 500).replace(/<[^>]+>/g, '')), webReaderLink !== undefined && __jsx(\"a\", {\n    target: \"_blink\",\n    href: webReaderLink,\n    className: \"btn btn-success mr-3\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faBookOpen\n  }), \"Read Now\"), pdfLink !== undefined && __jsx(\"a\", {\n    target: \"_blink\",\n    href: pdfLink,\n    className: \"btn btn-danger mr-3\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faFilePdf\n  }), \"Download PDF\"), __jsx(\"button\", {\n    onClick: () => addBooklist(),\n    className: \"btn btn-primary\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faFolderPlus\n  }), \"Add to Booklist\"))) : __jsx(Loading, null));\n};\n\nexport default BookDetails;","map":null,"metadata":{},"sourceType":"module"}